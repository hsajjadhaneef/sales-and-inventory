 --  Retrieve the list of all products along with their category names and supplier names.


select p.ProductName,c.CategoryName,s.SupplierName 
      from dim_products p 
	join   dim_categories c 
       on p.CategoryID=c.CategoryID 
       join dim_suppliers s 
             on p.SupplierID=s.SupplierID ;
             
    --  Calculate the total sales revenue for each category for the year 2023.


SELECT
    c.CategoryName,
    SUM(s.QuantitySold * s.TotalAmount) AS sales_revenue
FROM
    Dim_Categories c
JOIN
    Dim_Products p ON c.CategoryID = p.CategoryID
JOIN
    Fact_Sales s ON p.ProductID = s.ProductID
WHERE
    YEAR(s.SaleDate) = 2023
GROUP BY
    c.CategoryName
ORDER BY
    sales_revenue DESC;

-- Find the top 5 best-selling products in terms of total quantity sold

select ProductName,sum(s.quantitysold) as total_quantity 
   from  fact_sales s
   join 
dim_products p 
on s.ProductID=p.ProductID 
group by Productname
order by total_quantity desc
limit 5;

-- Identify customers who have made purchases worth more than $1000 in total.
select c.FirstName,c.LastName,sum(s.TotalAmount) as perchase
from  dim_customers c 
join 
 fact_sales s 
 on c.CustomerID=s.CustomerID 
 group by c.CustomerID,c.FirstName,c.LastName
 having sum(s.TotalAmount);
 
 -- List the suppliers who have not supplied any products.
 
 select s.SupplierID,s.SupplierName from 
 dim_suppliers s  
left join dim_products p 
 on s.SupplierID=p.SupplierID 
where p.SupplierID is null;

-- Find the products that are out of stock (StockQuantity is 0).

select ProductName from 
dim_products 
where 
StockQuantity=0
group by ProductName;

-- Calculate the total revenue generated by each supplier.

select sp.SupplierID, sp.SupplierName,sum(s.quantitysold*s.totalamount) as revenue_generated from 
dim_suppliers sp 
join dim_products p 
on sp.SupplierID=p.SupplierID 
join fact_sales s 
on p.ProductID=s.ProductID 
group by sp.SupplierName;


-- 8. Determine the month with the highest sales revenue in 2023

select  year(SaleDate) as year,  monthname(saledate) as month, sum(QuantitySold*TotalAmount) as sales_revenue 
 from fact_sales 
 where year(saledate)=2023
group by SaleID
order by sales_revenue desc
limit 1;
set sql_mode="";

-- 9. List the customers who have made purchases in the last 30 days.

select c.CustomerID, c.FirstName,c.LastName,c.Email from 
dim_customers c 
join 
fact_sales s on 
c.CustomerID=s.CustomerID 
where 
s.SaleDate >=date_sub(curdate(),interval 30 day);


-- Calculate the average order value for each customer.


select c.CustomerID,c.FirstName,c.LastName,s.QuantitySold,
round(avg(s.QuantitySold*TotalAmount),2) avg_order_value from
dim_customers c 
join fact_sales s
on c.CustomerID=s.CustomerID
group by c.CustomerID
order by avg_order_value desc;






